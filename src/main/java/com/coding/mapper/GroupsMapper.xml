<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coding.mapper.GroupsMapper" >

    <!-- 根据用户唯一ID删除用户信息 -->
    <delete id="deleteGroupsByPrimaryKey" parameterType="java.lang.Integer">
        delete from groups
        where group_id = #{groupId,jdbcType=INTEGER}
    </delete>

    <!--插入分组信息-->
    <insert id="insertGroups" parameterType="com.coding.pojo.Groups">
        insert into groups (group_name, group_jurisdiction,is_start)
        values (#{groupName,jdbcType=VARCHAR}, #{groupJurisdiction,jdbcType=VARCHAR}, #{isStart,jdbcType=INTEGER})
    </insert>


    <!--封装 Groups 类-->
    <resultMap id="BaseResultMap" type="com.coding.pojo.Groups" >
        <id column="group_id" property="groupId" jdbcType="INTEGER" />
        <result column="group_name" property="groupName" jdbcType="VARCHAR" />
        <result column="group_jurisdiction" property="groupJurisdiction" jdbcType="VARCHAR" />
        <result column="is_start" property="isStart" jdbcType="INTEGER"/>
    </resultMap>
    <!--Group表字段-->
    <sql id="Base_Column_List">
        group_id, group_name, "group_jurisdiction",is_start
    </sql>
    <!--根据用户唯一ID查询用户信息-->
    <select id="selectGroupsByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <if test="groupId!=null and groupId!=0">
            select
            <include refid="Base_Column_List" />
            from groups
            where group_id = #{groupId,jdbcType=INTEGER}
        </if>
        <if test="groupId==null or groupId==0">
            select group10 from groups order by group_id DESC limit 1
        </if>

    </select>

    <!--根据 用户唯一ID 更新用户信息-->
    <update id="updateGroupsByPrimaryKey" parameterType="com.coding.pojo.Groups">
        update groups
        set group_name = #{groupName,jdbcType=VARCHAR},
      group_jurisdiction = #{groupJurisdiction,jdbcType=VARCHAR},
        is_start = #{isStart,jdbcType=INTEGER}
      <!--,
      group1 = #{group1,jdbcType=VARCHAR},
      group2 = #{group2,jdbcType=VARCHAR},
      group3 = #{group3,jdbcType=VARCHAR},
      group4 = #{group4,jdbcType=VARCHAR},
      group5 = #{group5,jdbcType=VARCHAR},
      group6 = #{group6,jdbcType=VARCHAR},
      group7 = #{group7,jdbcType=VARCHAR},
      group8 = #{group8,jdbcType=VARCHAR},
      group9 = #{group9,jdbcType=VARCHAR},
      group10 = #{group10,jdbcType=VARCHAR}-->
    where group_id = #{groupId,jdbcType=INTEGER}
    </update>

    <!--查询所有用户信息 封装到 pojo中的 Group类中以集合形式返回-->
    <select id="selectGroupsAll" resultMap="BaseResultMap ">
        SELECT
        <include refid="Base_Column_List" />
        FROM  groups
    </select>
</mapper>